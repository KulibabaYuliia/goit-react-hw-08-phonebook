{"version":3,"file":"static/js/631.5fc5bb52.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsList.styled.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","redux/contacts/contacts.selectors.js","components/ContactsList/ContactsList.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const FormWrap = styled(Form)`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid;\n  width: 300px;\n  align-items: start;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  margin-top: 10px;\n\n  label {\n    display: flex;\n    gap: 10px;\n    flex-direction: column;\n    margin-bottom: 10px;\n  }\n\n  button {\n    padding: 5px;\n    border-radius: 4px;\n    background-color: transparent;\n    border: 1px solid #b2b2b2;\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  border: 1px solid #b2b2b2;\n  border-radius: 4px;\n  padding: 3px;\n\n  &:focus {\n    border-color: transparent;\n  }\n`;\n","import { FormWrap, StyledField } from './ContactForm.styled';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { nanoid } from 'nanoid';\n\nimport { useDispatch } from 'react-redux';\nimport { fetchAddContacts } from 'redux/contacts/contacts.reducer';\n\nconst phoneRegExp = /[0-9]{3}-[0-9]{2}-[0-9]{2}/;\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' ][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nlet userSchema = yup.object().shape({\n  name: yup\n    .string('Name is not valid')\n    .matches(nameRegExp, 'Name is not valid')\n    .required(),\n  number: yup\n    .string('Phone number is not valid')\n    .matches(phoneRegExp, 'Phone number is not valid')\n    .required(),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const submitHandler = (values, action) => {\n    const contact = {\n      id: nanoid(),\n      name: values.name,\n      phone: values.number,\n    };\n    dispatch(fetchAddContacts(contact));\n    action.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={userSchema}\n      onSubmit={submitHandler}\n    >\n      <FormWrap>\n        <label>\n          Name\n          <StyledField type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </label>\n        <label>\n          Number\n          <StyledField type=\"tel\" name=\"number\" placeholder=\"123-45-67\" />\n          <ErrorMessage name=\"number\" component=\"div\" />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </FormWrap>\n    </Formik>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterWrap = styled.div`\n  margin-top: 15px;\n  margin-bottom: 15px;\n\n  label {\n    display: flex;\n    gap: 10px;\n    flex-direction: column;\n    margin-bottom: 10px;\n    align-items: start;\n  }\n\n  input {\n    border: 1px solid #b2b2b2;\n    border-radius: 4px;\n    padding: 3px;\n  }\n\n  input:focus {\n    border-color: transparent;\n  }\n`;\n","import { FilterWrap } from './Filter.styled';\nimport { changeFilter } from 'redux/contacts/contacts.reducer';\nimport { useDispatch } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <FilterWrap>\n      <label>\n        Find contact by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          onChange={e => dispatch(changeFilter(e.target.value))}\n        />\n      </label>\n    </FilterWrap>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsListWrap = styled.ul`\n  margin-top: 10px;\n\n  li {\n    margin-top: 5px;\n\n    button {\n      margin-left: 10px;\n      padding: 3px;\n      border-radius: 4px;\n      background-color: transparent;\n      border: 1px solid #b2b2b2;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const ContactWrap = styled.li`\n  margin-top: 5px;\n\n  button {\n    margin-left: 10px;\n    padding: 3px;\n    border-radius: 4px;\n    background-color: transparent;\n    border: 1px solid #b2b2b2;\n  }\n`;\n","import { ContactWrap } from './Contact.styled';\nimport { useDispatch } from 'react-redux';\nimport { fetchDeleteContact } from 'redux/contacts/contacts.reducer';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ContactWrap>\n      <span>\n        {contact.name}: {contact.phone}\n      </span>\n      <button onClick={() => dispatch(fetchDeleteContact(contact.id))}>\n        delete\n      </button>\n    </ContactWrap>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectFilterQuery = state => state.contacts.filterQuery;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilterQuery],\n  (contacts, filterQuery) =>\n    contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filterQuery);\n    })\n);\n","import { ContactsListWrap } from './ContactsList.styled';\nimport { Contact } from '../Contact/Contact';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/contacts.selectors';\n\nexport const ContactsList = () => {\n  const filtredContactsList = useSelector(selectFilteredContacts);\n\n  return (\n    <ContactsListWrap>\n      {filtredContactsList.map(contact => {\n        return <Contact key={contact.id} contact={contact} />;\n      })}\n    </ContactsListWrap>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport {\n  selectIsLoading,\n  selectError,\n} from 'redux/contacts/contacts.selectors';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contacts.reducer';\n\nexport default function Contacts() {\n  const isLoading = useSelector(selectIsLoading);\n  const errorMassege = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && <Loader />}\n      {errorMassege && (\n        <div>Something went wrong. Error messege: {errorMassege}</div>\n      )}\n      <ContactsList />\n    </div>\n  );\n}\n"],"names":["FormWrap","styled","Form","StyledField","Field","userSchema","yup","shape","name","matches","required","number","ContactForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","action","contact","id","nanoid","phone","fetchAddContacts","resetForm","type","component","placeholder","FilterWrap","Filter","onChange","e","changeFilter","target","value","ContactsListWrap","ContactWrap","Contact","onClick","fetchDeleteContact","selectIsLoading","state","contacts","isLoading","selectError","error","selectFilteredContacts","createSelector","items","filterQuery","filter","toLowerCase","includes","ContactsList","filtredContactsList","useSelector","map","Contacts","errorMassege","useEffect","fetchContacts","Loader"],"sourceRoot":""}