{"version":3,"file":"static/js/427.dd64f1fb.chunk.js","mappings":"yNAGaA,GAAWC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,ycA0BRE,GAAcF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,kJ,mBCzBpBI,EAAaC,EAAAA,KAAaC,MAAM,CAClCC,SAAUF,EAAAA,GACA,qBACPG,SAAS,6BACZC,MAAOJ,EAAAA,GACG,sBACPI,MAAM,sBACND,SAAS,6BACZE,SAAUL,EAAAA,GACA,yBACPM,IAAI,EAAG,yBACPH,SAAS,+BAGDI,EAAmB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACjC,OACE,SAAC,KAAD,CACEC,cAAe,CAAEP,SAAU,GAAIE,MAAO,GAAIC,SAAU,IACpDK,iBAAkBX,EAClBY,SAAUH,EAHZ,UAKE,UAACd,EAAD,YACE,6BAAO,QAEL,SAACG,EAAD,CAAae,KAAK,OAAOC,KAAK,cAC9B,SAAC,KAAD,CAAcA,KAAK,WAAWC,UAAU,YAE1C,6BAAO,SAEL,SAACjB,EAAD,CAAae,KAAK,QAAQC,KAAK,WAC/B,SAAC,KAAD,CAAcA,KAAK,QAAQC,UAAU,YAEvC,6BAAO,YAEL,SAACjB,EAAD,CACEe,KAAK,WACLC,KAAK,WACLE,YAAY,iBAEd,SAAC,KAAD,CAAcF,KAAK,WAAWC,UAAU,YAE1C,mBAAQF,KAAK,SAAb,SAAsB,eAI7B,E,sCCxCc,SAASI,IACtB,IAAMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAeF,EAAAA,EAAAA,IAAYG,EAAAA,IAC3BC,GAAWC,EAAAA,EAAAA,MAajB,OACE,4BACE,wBAAI,uBACJ,SAAChB,EAAD,CAAkBC,cAdA,SAACgB,EAAQC,GAC7B,IAAMC,EAAU,CACdb,KAAMW,EAAOtB,SACbE,MAAOoB,EAAOpB,MACdC,SAAUmB,EAAOnB,UAEnBsB,QAAQC,IAAIF,GACZJ,GAASO,EAAAA,EAAAA,IAAcH,IACvBD,EAAOK,WACR,IAMIb,IAAa,SAACc,EAAA,EAAD,IACbX,IACC,2BAAK,wCAAsCA,OAIlD,C,sHChCYD,EAAkB,SAAAa,GAAK,OAAIA,EAAMC,SAASA,SAAShB,SAA5B,EACvBI,EAAc,SAAAW,GAAK,OAAIA,EAAMC,SAASA,SAASC,KAA5B,EAGnBC,GAAyBC,EAAAA,EAAAA,IACpC,CAN4B,SAAAJ,GAAK,OAAIA,EAAMC,SAASA,SAASI,KAA5B,EAGF,SAAAL,GAAK,OAAIA,EAAMC,SAASK,WAAnB,IAIpC,SAACL,EAAUK,GAAX,OACEL,EAASM,QAAO,SAAAb,GACd,OAAOA,EAAQb,KAAK2B,cAAcC,SAASH,EAC5C,GAHH,G","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx","redux/contacts/contacts.selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const FormWrap = styled(Form)`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid;\n  width: 300px;\n  align-items: start;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  margin-top: 10px;\n\n  label {\n    display: flex;\n    gap: 10px;\n    flex-direction: column;\n    margin-bottom: 10px;\n  }\n\n  button {\n    padding: 5px;\n    border-radius: 4px;\n    background-color: transparent;\n    border: 1px solid #b2b2b2;\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  border: 1px solid #b2b2b2;\n  border-radius: 4px;\n  padding: 3px;\n\n  &:focus {\n    border-color: transparent;\n  }\n`;\n","import { FormWrap, StyledField } from './RegisterForm.styled';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nlet userSchema = yup.object().shape({\n  userName: yup\n    .string('Name is not valid')\n    .required('Field should not be empty'),\n  email: yup\n    .string('Email is not valid')\n    .email('Email is not valid')\n    .required('Field should not be empty'),\n  password: yup\n    .string('Password is not valid')\n    .min(7, 'Password is too short')\n    .required('Field should not be empty'),\n});\n\nexport const RegistrationForm = ({ submitHandler }) => {\n  return (\n    <Formik\n      initialValues={{ userName: '', email: '', password: '' }}\n      validationSchema={userSchema}\n      onSubmit={submitHandler}\n    >\n      <FormWrap>\n        <label>\n          Name\n          <StyledField type=\"text\" name=\"userName\" />\n          <ErrorMessage name=\"userName\" component=\"div\" />\n        </label>\n        <label>\n          Email\n          <StyledField type=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\" component=\"div\" />\n        </label>\n        <label>\n          Password\n          <StyledField\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"***********\"\n          />\n          <ErrorMessage name=\"password\" component=\"div\" />\n        </label>\n        <button type=\"submit\">SignUp</button>\n      </FormWrap>\n    </Formik>\n  );\n};\n","import { RegistrationForm } from 'components/RegisterForm/RegisterForm';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  selectIsLoading,\n  selectError,\n} from 'redux/contacts/contacts.selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { registerThunk } from 'redux/auth/auth.operations';\n\nexport default function Contacts() {\n  const isLoading = useSelector(selectIsLoading);\n  const errorMassege = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  const submitHandler = (values, action) => {\n    const contact = {\n      name: values.userName,\n      email: values.email,\n      password: values.password,\n    };\n    console.log(contact);\n    dispatch(registerThunk(contact));\n    action.resetForm();\n  };\n\n  return (\n    <div>\n      <h1>Registration Page</h1>\n      <RegistrationForm submitHandler={submitHandler} />\n      {isLoading && <Loader />}\n      {errorMassege && (\n        <div>Something went wrong. Error messege: {errorMassege}</div>\n      )}\n    </div>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectFilterQuery = state => state.contacts.filterQuery;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilterQuery],\n  (contacts, filterQuery) =>\n    contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filterQuery);\n    })\n);\n"],"names":["FormWrap","styled","Form","StyledField","Field","userSchema","yup","shape","userName","required","email","password","min","RegistrationForm","submitHandler","initialValues","validationSchema","onSubmit","type","name","component","placeholder","Contacts","isLoading","useSelector","selectIsLoading","errorMassege","selectError","dispatch","useDispatch","values","action","contact","console","log","registerThunk","resetForm","Loader","state","contacts","error","selectFilteredContacts","createSelector","items","filterQuery","filter","toLowerCase","includes"],"sourceRoot":""}